<?php
/**
 * Order
 *
 * PHP version 5
 *
 * @category Class
 * @package  CollingMedia\Infusionsoft
 * @author   Swaagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Infusionsoft
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: V1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace CollingMedia\Infusionsoft\Model;

use \ArrayAccess;

/**
 * Order Class Doc Comment
 *
 * @category    Class
 * @package     CollingMedia\Infusionsoft
 * @author      Swagger Codegen team
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class Order implements ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      * @var string
      */
    protected static $swaggerModelName = 'Order';

    /**
      * Array of property to type mappings. Used for (de)serialization
      * @var string[]
      */
    protected static $swaggerTypes = [
        'contact' => '\CollingMedia\Infusionsoft\Model\InlineResponse20010Contact',
        'creation_date' => 'string',
        'id' => 'int',
        'lead_affiliate_id' => 'int',
        'modification_date' => 'string',
        'order_date' => 'string',
        'order_items' => '\CollingMedia\Infusionsoft\Model\InlineResponse20010OrderItems[]',
        'recurring' => 'bool',
        'refund_total' => 'double',
        'sales_affiliate_id' => 'int',
        'shipping_information' => '\CollingMedia\Infusionsoft\Model\InlineResponse20010ShippingInformation',
        'status' => 'string',
        'title' => 'string',
        'total' => 'double',
        'total_due' => 'double',
        'total_paid' => 'double'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      * @var string[]
      */
    protected static $swaggerFormats = [
        'contact' => null,
        'creation_date' => null,
        'id' => 'int64',
        'lead_affiliate_id' => 'int64',
        'modification_date' => null,
        'order_date' => null,
        'order_items' => null,
        'recurring' => null,
        'refund_total' => 'double',
        'sales_affiliate_id' => 'int64',
        'shipping_information' => null,
        'status' => null,
        'title' => null,
        'total' => 'double',
        'total_due' => 'double',
        'total_paid' => 'double'
    ];

    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name, and the value is the original name
     * @var string[]
     */
    protected static $attributeMap = [
        'contact' => 'contact',
        'creation_date' => 'creation_date',
        'id' => 'id',
        'lead_affiliate_id' => 'lead_affiliate_id',
        'modification_date' => 'modification_date',
        'order_date' => 'order_date',
        'order_items' => 'order_items',
        'recurring' => 'recurring',
        'refund_total' => 'refund_total',
        'sales_affiliate_id' => 'sales_affiliate_id',
        'shipping_information' => 'shipping_information',
        'status' => 'status',
        'title' => 'title',
        'total' => 'total',
        'total_due' => 'total_due',
        'total_paid' => 'total_paid'
    ];


    /**
     * Array of attributes to setter functions (for deserialization of responses)
     * @var string[]
     */
    protected static $setters = [
        'contact' => 'setContact',
        'creation_date' => 'setCreationDate',
        'id' => 'setId',
        'lead_affiliate_id' => 'setLeadAffiliateId',
        'modification_date' => 'setModificationDate',
        'order_date' => 'setOrderDate',
        'order_items' => 'setOrderItems',
        'recurring' => 'setRecurring',
        'refund_total' => 'setRefundTotal',
        'sales_affiliate_id' => 'setSalesAffiliateId',
        'shipping_information' => 'setShippingInformation',
        'status' => 'setStatus',
        'title' => 'setTitle',
        'total' => 'setTotal',
        'total_due' => 'setTotalDue',
        'total_paid' => 'setTotalPaid'
    ];


    /**
     * Array of attributes to getter functions (for serialization of requests)
     * @var string[]
     */
    protected static $getters = [
        'contact' => 'getContact',
        'creation_date' => 'getCreationDate',
        'id' => 'getId',
        'lead_affiliate_id' => 'getLeadAffiliateId',
        'modification_date' => 'getModificationDate',
        'order_date' => 'getOrderDate',
        'order_items' => 'getOrderItems',
        'recurring' => 'getRecurring',
        'refund_total' => 'getRefundTotal',
        'sales_affiliate_id' => 'getSalesAffiliateId',
        'shipping_information' => 'getShippingInformation',
        'status' => 'getStatus',
        'title' => 'getTitle',
        'total' => 'getTotal',
        'total_due' => 'getTotalDue',
        'total_paid' => 'getTotalPaid'
    ];

    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    public static function setters()
    {
        return self::$setters;
    }

    public static function getters()
    {
        return self::$getters;
    }

    

    

    /**
     * Associative array for storing property values
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     * @param mixed[] $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['contact'] = isset($data['contact']) ? $data['contact'] : null;
        $this->container['creation_date'] = isset($data['creation_date']) ? $data['creation_date'] : null;
        $this->container['id'] = isset($data['id']) ? $data['id'] : null;
        $this->container['lead_affiliate_id'] = isset($data['lead_affiliate_id']) ? $data['lead_affiliate_id'] : null;
        $this->container['modification_date'] = isset($data['modification_date']) ? $data['modification_date'] : null;
        $this->container['order_date'] = isset($data['order_date']) ? $data['order_date'] : null;
        $this->container['order_items'] = isset($data['order_items']) ? $data['order_items'] : null;
        $this->container['recurring'] = isset($data['recurring']) ? $data['recurring'] : null;
        $this->container['refund_total'] = isset($data['refund_total']) ? $data['refund_total'] : null;
        $this->container['sales_affiliate_id'] = isset($data['sales_affiliate_id']) ? $data['sales_affiliate_id'] : null;
        $this->container['shipping_information'] = isset($data['shipping_information']) ? $data['shipping_information'] : null;
        $this->container['status'] = isset($data['status']) ? $data['status'] : null;
        $this->container['title'] = isset($data['title']) ? $data['title'] : null;
        $this->container['total'] = isset($data['total']) ? $data['total'] : null;
        $this->container['total_due'] = isset($data['total_due']) ? $data['total_due'] : null;
        $this->container['total_paid'] = isset($data['total_paid']) ? $data['total_paid'] : null;
    }

    /**
     * show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalid_properties = [];

        return $invalid_properties;
    }

    /**
     * validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {

        return true;
    }


    /**
     * Gets contact
     * @return \CollingMedia\Infusionsoft\Model\InlineResponse20010Contact
     */
    public function getContact()
    {
        return $this->container['contact'];
    }

    /**
     * Sets contact
     * @param \CollingMedia\Infusionsoft\Model\InlineResponse20010Contact $contact
     * @return $this
     */
    public function setContact($contact)
    {
        $this->container['contact'] = $contact;

        return $this;
    }

    /**
     * Gets creation_date
     * @return string
     */
    public function getCreationDate()
    {
        return $this->container['creation_date'];
    }

    /**
     * Sets creation_date
     * @param string $creation_date
     * @return $this
     */
    public function setCreationDate($creation_date)
    {
        $this->container['creation_date'] = $creation_date;

        return $this;
    }

    /**
     * Gets id
     * @return int
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     * @param int $id
     * @return $this
     */
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets lead_affiliate_id
     * @return int
     */
    public function getLeadAffiliateId()
    {
        return $this->container['lead_affiliate_id'];
    }

    /**
     * Sets lead_affiliate_id
     * @param int $lead_affiliate_id
     * @return $this
     */
    public function setLeadAffiliateId($lead_affiliate_id)
    {
        $this->container['lead_affiliate_id'] = $lead_affiliate_id;

        return $this;
    }

    /**
     * Gets modification_date
     * @return string
     */
    public function getModificationDate()
    {
        return $this->container['modification_date'];
    }

    /**
     * Sets modification_date
     * @param string $modification_date
     * @return $this
     */
    public function setModificationDate($modification_date)
    {
        $this->container['modification_date'] = $modification_date;

        return $this;
    }

    /**
     * Gets order_date
     * @return string
     */
    public function getOrderDate()
    {
        return $this->container['order_date'];
    }

    /**
     * Sets order_date
     * @param string $order_date
     * @return $this
     */
    public function setOrderDate($order_date)
    {
        $this->container['order_date'] = $order_date;

        return $this;
    }

    /**
     * Gets order_items
     * @return \CollingMedia\Infusionsoft\Model\InlineResponse20010OrderItems[]
     */
    public function getOrderItems()
    {
        return $this->container['order_items'];
    }

    /**
     * Sets order_items
     * @param \CollingMedia\Infusionsoft\Model\InlineResponse20010OrderItems[] $order_items
     * @return $this
     */
    public function setOrderItems($order_items)
    {
        $this->container['order_items'] = $order_items;

        return $this;
    }

    /**
     * Gets recurring
     * @return bool
     */
    public function getRecurring()
    {
        return $this->container['recurring'];
    }

    /**
     * Sets recurring
     * @param bool $recurring
     * @return $this
     */
    public function setRecurring($recurring)
    {
        $this->container['recurring'] = $recurring;

        return $this;
    }

    /**
     * Gets refund_total
     * @return double
     */
    public function getRefundTotal()
    {
        return $this->container['refund_total'];
    }

    /**
     * Sets refund_total
     * @param double $refund_total
     * @return $this
     */
    public function setRefundTotal($refund_total)
    {
        $this->container['refund_total'] = $refund_total;

        return $this;
    }

    /**
     * Gets sales_affiliate_id
     * @return int
     */
    public function getSalesAffiliateId()
    {
        return $this->container['sales_affiliate_id'];
    }

    /**
     * Sets sales_affiliate_id
     * @param int $sales_affiliate_id
     * @return $this
     */
    public function setSalesAffiliateId($sales_affiliate_id)
    {
        $this->container['sales_affiliate_id'] = $sales_affiliate_id;

        return $this;
    }

    /**
     * Gets shipping_information
     * @return \CollingMedia\Infusionsoft\Model\InlineResponse20010ShippingInformation
     */
    public function getShippingInformation()
    {
        return $this->container['shipping_information'];
    }

    /**
     * Sets shipping_information
     * @param \CollingMedia\Infusionsoft\Model\InlineResponse20010ShippingInformation $shipping_information
     * @return $this
     */
    public function setShippingInformation($shipping_information)
    {
        $this->container['shipping_information'] = $shipping_information;

        return $this;
    }

    /**
     * Gets status
     * @return string
     */
    public function getStatus()
    {
        return $this->container['status'];
    }

    /**
     * Sets status
     * @param string $status
     * @return $this
     */
    public function setStatus($status)
    {
        $this->container['status'] = $status;

        return $this;
    }

    /**
     * Gets title
     * @return string
     */
    public function getTitle()
    {
        return $this->container['title'];
    }

    /**
     * Sets title
     * @param string $title
     * @return $this
     */
    public function setTitle($title)
    {
        $this->container['title'] = $title;

        return $this;
    }

    /**
     * Gets total
     * @return double
     */
    public function getTotal()
    {
        return $this->container['total'];
    }

    /**
     * Sets total
     * @param double $total
     * @return $this
     */
    public function setTotal($total)
    {
        $this->container['total'] = $total;

        return $this;
    }

    /**
     * Gets total_due
     * @return double
     */
    public function getTotalDue()
    {
        return $this->container['total_due'];
    }

    /**
     * Sets total_due
     * @param double $total_due
     * @return $this
     */
    public function setTotalDue($total_due)
    {
        $this->container['total_due'] = $total_due;

        return $this;
    }

    /**
     * Gets total_paid
     * @return double
     */
    public function getTotalPaid()
    {
        return $this->container['total_paid'];
    }

    /**
     * Sets total_paid
     * @param double $total_paid
     * @return $this
     */
    public function setTotalPaid($total_paid)
    {
        $this->container['total_paid'] = $total_paid;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     * @param  integer $offset Offset
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     * @param  integer $offset Offset
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     * @param  integer $offset Offset
     * @param  mixed   $value  Value to be set
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     * @param  integer $offset Offset
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(\CollingMedia\Infusionsoft\ObjectSerializer::sanitizeForSerialization($this), JSON_PRETTY_PRINT);
        }

        return json_encode(\CollingMedia\Infusionsoft\ObjectSerializer::sanitizeForSerialization($this));
    }
}


